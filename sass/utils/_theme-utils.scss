@use "sass:list";

$htmlTags: "hr"; // This stores a list of html tags that are being directly styled (they do not have a prefix when styling)
$ids: "theme-menu-options"; // This stores a list of html ids that are being directly styled (use a "#" prefix when styling)

/*Basis for this design comes from: https://www.toptal.com/sass/theming-scss-tutorial*/
@mixin themify($theme-name, $theme-map) {
    .#{$theme-name} {

        // Loop through each of the keys (sections)
        @each $section, $map in $theme-map {
            @if (($section == "bordered-link") or ($section == "bordered-link-tertiary-bg") or ($section == "theme-menu-option")) {
                .#{$section} {
                    background-color: map-get($map, bg-color); 
                    color: map-get($map, color);
                    border-color: map-get($map, border-color);

                    &:hover{
                        background-color: map-get($map, color);
                        color: map-get($map, bg-color);
                        border-color: map-get($map, bg-color);
                    }
                }
            }
            @else if($section == disabled-link){
                .bordered-link[aria-disabled="true"]{
                    background-color: map-get($map, bg-color);
                    color: map-get($map, color);
                    border-color: map-get($map, border-color);
                }
            }
            @else if (index($section, $ids)){
                ##{$section} {
                    background-color: map-get($map, bg-color);
                    color: map-get($map, color);
                    border-color: map-get($map, border-color);
                }
            }
            @else if (index($section, $htmlTags)){
                #{$section}{
                    background-color: map-get($map, bg-color);
                    color: map-get($map, color);
                    border-color: map-get($map, border-color);
                }
            }
            @else { 
                .#{$section} {
                    background-color: map-get($map, bg-color);
                    color: map-get($map, color);
                    border-color: map-get($map, border-color);
                }
            }
        }
    }
}

@mixin theme-preview($theme-name, $color-list){
    ##{$theme-name}-sec-1{
        background-color: list.nth($color-list, 1);
    }
  
    ##{$theme-name}-sec-2{
      background-color: list.nth($color-list, 3);
    }
  
    ##{$theme-name}-sec-3{
      background-color: list.nth($color-list, 2);
    }
}